{"version":3,"file":"static/js/691.9933028f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/themoviedbService.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const MovieItem = styled.li`\r\n  flex: 49%;\r\n`;\r\n\r\nexport const MovieLink = styled(Link)`\r\n  text-decoration: none;\r\n  display: block;\r\n  border: 2px solid #bde3f3;\r\n  padding: 10px;\r\n  color: #4b4870;\r\n\r\n  &:hover {\r\n    border: 2px solid #c0dbe6;\r\n  }\r\n\r\n  &:visited {\r\n    color: #9397b7;\r\n  }\r\n`;\r\n\r\n//\r\n","import { useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { List, MovieItem, MovieLink } from './MoviesList.styled';\r\n\r\nexport const MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <List>\r\n      {movies.map(({ original_title, id }) => (\r\n        <MovieItem key={id}>\r\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\r\n            {original_title}\r\n          </MovieLink>\r\n        </MovieItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchbarFormBox = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: var(--color-blue-hover);\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormBtn = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { searchMovie } from 'services/themoviedbService';\r\nimport { MoviesList } from 'components/MoviesList/MoviesList';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport {\r\n  SearchbarFormBox,\r\n  SearchForm,\r\n  SearchFormBtn,\r\n  SearchFormInput,\r\n} from './Movies.styled';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst Movies = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const MovieName = searchParams.get('name') ?? '';\r\n\r\n  useEffect(() => {\r\n    if (MovieName === '') {\r\n      return;\r\n    }\r\n    setQuery(MovieName);\r\n    const fetchMovies = async query => {\r\n      try {\r\n        const response = await searchMovie(query);\r\n        setMovies(response.results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchMovies(MovieName);\r\n  }, [MovieName]);\r\n\r\n  const updateQueryString = name => {\r\n    const nextParams = name !== '' ? { name } : {};\r\n    setSearchParams(nextParams);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    e.target.name.value = '';\r\n    updateQueryString(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <SearchbarFormBox>\r\n        <SearchForm onSubmit={onSubmit}>\r\n          <SearchFormBtn type=\"submit\">\r\n            <FaSearch />\r\n          </SearchFormBtn>\r\n\r\n          <SearchFormInput\r\n            name=\"name\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movie\"\r\n            onChange={handleChange}\r\n            value={query}\r\n          />\r\n        </SearchForm>\r\n      </SearchbarFormBox>\r\n      <MoviesList movies={movies}></MoviesList>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import Axios from 'axios';\r\n\r\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst API_KEY = '2b316c342fe13f9049052886494c29f1';\r\nconst URL = 'https://api.themoviedb.org/';\r\n\r\nconst getTrendingMovies = async () => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieById = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieCast = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieReviews = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst searchMovie = async query => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport {\r\n  getTrendingMovies,\r\n  getMovieById,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n  searchMovie,\r\n};\r\n"],"names":["List","styled","MovieItem","MovieLink","Link","MoviesList","movies","location","useLocation","map","original_title","id","to","state","from","SearchbarFormBox","SearchForm","SearchFormBtn","SearchFormInput","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","MovieName","get","useEffect","fetchMovies","searchMovie","response","results","console","log","onSubmit","e","name","preventDefault","target","value","type","autoComplete","autoFocus","placeholder","onChange","event","API_KEY","URL","getTrendingMovies","Axios","data","getMovieById","movie_id","getMovieCast","getMovieReviews"],"sourceRoot":""}