{"version":3,"file":"static/js/257.c8c9cc1d.chunk.js","mappings":"qTAGaA,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,GAAPD,CAAH,yZAoBPE,EAAYF,EAAAA,QAAAA,IAAH,4GAOTG,EAAcH,EAAAA,QAAAA,IAAH,mFAMXI,EAAUJ,EAAAA,QAAAA,GAAH,qP,SCmCpB,EA1DqB,WAAO,IAAD,IACzB,GAAkCK,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAUK,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAc1C,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAaD,GAFtB,OAERE,EAFQ,OAGdd,EAAac,GACbZ,EAAUY,EAASb,QAJL,gDAMdc,QAAQC,IAAR,MANc,yDAAH,sDASfL,EAAUN,EACX,GAAE,CAACA,KAEF,6BACE,SAACb,EAAD,CAASyB,GAAIV,EAAb,uBACA,UAACZ,EAAD,YACE,gBAAKuB,IAzBG,kCAyBYnB,EAAUoB,YAAaC,IAAI,MAC/C,UAACxB,EAAD,YACE,0BACGG,EAAUsB,eADb,IAEGC,IAAOvB,EAAUwB,cAAcC,OAAO,QAFzC,QAIA,0CAAkBzB,EAAU0B,WAA5B,QACA,4BACE,qCACC1B,EAAU2B,aAEb,4BACE,mCACCzB,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,4BAAkBA,EAAlB,MAAWA,EADD,cAMlB,4BACE,oDACA,UAAC/B,EAAD,YACE,yBACE,SAAC,KAAD,CAASoB,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,KAAD,SAIP,C,mMCjEKY,EAAU,mCACVC,EAAM,8BAENC,EAAiB,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACiBD,IAFhB,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qDAOjBpB,EAAY,mCAAG,WAAMqB,GAAN,yFACIF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJI,EADI,oBACgBL,IAFpB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZE,EAAY,mCAAG,WAAMD,GAAN,yFACIF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJI,EADI,4BACwBL,IAF5B,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZG,EAAe,mCAAG,WAAMF,GAAN,yFACCF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJI,EADI,4BACwBL,IAFzB,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfI,EAAW,mCAAG,WAAMC,GAAN,yFACKN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kCACWD,EADX,kBAC4BS,IAFjC,uBACVL,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedbService.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const BackBtn = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-weight: 500;\r\n  margin-right: 20px;\r\n  transition: background-color 0.5s, color 0.5s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 150px;\r\n  height: 30px;\r\n  margin-bottom: 20px;\r\n  background-color: var(--color-text);\r\n\r\n  &:hover {\r\n    color: white;\r\n    background-color: var(--color-btn);\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const LinkBox = styled.ul`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    text-decoration: none;\r\n    color: white;\r\n    background-color: var(--color-text);\r\n    padding: 10px;\r\n  }\r\n`;\r\n","import { Outlet, NavLink, useLocation, useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { getMovieById } from 'services/themoviedbService';\r\nimport {\r\n  BackBtn,\r\n  Container,\r\n  Description,\r\n  LinkBox,\r\n} from './MovieDetails.styled';\r\n\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300';\r\n\r\nconst MovieDetails = () => {\r\n  const [movieData, movieDataSet] = useState({});\r\n  const [genres, setGenres] = useState([]);\r\n  const location = useLocation();\r\n  const { movieId } = useParams();\r\n  const backLink = location?.state?.from ?? '/';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async id => {\r\n      try {\r\n        const response = await getMovieById(id);\r\n        movieDataSet(response);\r\n        setGenres(response.genres);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData(movieId);\r\n  }, [movieId]);\r\n  return (\r\n    <main>\r\n      <BackBtn to={backLink}> Go back</BackBtn>\r\n      <Container>\r\n        <img src={IMG_URL + movieData.poster_path} alt=\"\"></img>\r\n        <Description>\r\n          <h3>\r\n            {movieData.original_title}(\r\n            {Moment(movieData.release_date).format('YYYY')})\r\n          </h3>\r\n          <div>User Score: {movieData.vote_count}%</div>\r\n          <div>\r\n            <h3>Overview</h3>\r\n            {movieData.overview}\r\n          </div>\r\n          <div>\r\n            <h3>Genres</h3>\r\n            {genres.map(({ name }) => (\r\n              <span key={name}>{name} </span>\r\n            ))}\r\n          </div>\r\n        </Description>\r\n      </Container>\r\n      <div>\r\n        <h3>Additional information</h3>\r\n        <LinkBox>\r\n          <li>\r\n            <NavLink to=\"cast\">Cast</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"reviews\">Reviews</NavLink>\r\n          </li>\r\n        </LinkBox>\r\n        <Outlet />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import Axios from 'axios';\r\n\r\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst API_KEY = '2b316c342fe13f9049052886494c29f1';\r\nconst URL = 'https://api.themoviedb.org/';\r\n\r\nconst getTrendingMovies = async () => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieById = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieCast = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieReviews = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst searchMovie = async query => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport {\r\n  getTrendingMovies,\r\n  getMovieById,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n  searchMovie,\r\n};\r\n"],"names":["BackBtn","styled","NavLink","Container","Description","LinkBox","useState","movieData","movieDataSet","genres","setGenres","location","useLocation","movieId","useParams","backLink","state","from","useEffect","fetchData","id","getMovieById","response","console","log","to","src","poster_path","alt","original_title","Moment","release_date","format","vote_count","overview","map","name","API_KEY","URL","getTrendingMovies","Axios","data","movie_id","getMovieCast","getMovieReviews","searchMovie","query"],"sourceRoot":""}