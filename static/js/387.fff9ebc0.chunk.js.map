{"version":3,"file":"static/js/387.fff9ebc0.chunk.js","mappings":"2RAEaA,E,QAAkBC,QAAAA,GAAH,0Q,SCmC5B,EA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAgBD,GAFzB,OAERE,EAFQ,OAGdP,EAAWO,EAASC,SAHN,gDAKdC,QAAQC,IAAR,MALc,yDAAH,sDAQfN,EAAUH,EACX,GAAE,CAACA,KAEF,SAACL,EAAD,UACIG,EAAQY,OAENZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,WAAYV,EAAhC,EAAgCA,GAAhC,OACV,2BACE,qCAAaQ,MACb,uBAAIC,KACJ,wBAAKE,IAAOD,EAAY,YAAYE,cAH7BZ,EADC,IADZ,6CAUT,C,mMC/BKa,EAAU,mCACVC,EAAM,8BAENC,EAAiB,mCAAG,sGACDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACiBD,IAFhB,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,oBACgBN,IAFpB,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZG,EAAY,mCAAG,WAAMD,GAAN,yFACIH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAF5B,uBACXI,EADW,EACXA,KADW,kBAIZA,GAJY,2CAAH,sDAOZhB,EAAe,mCAAG,WAAMkB,GAAN,yFACCH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACJK,EADI,4BACwBN,IAFzB,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,sDAOfI,EAAW,mCAAG,WAAMC,GAAN,yFACKN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kCACWD,EADX,kBAC4BS,IAFjC,uBACVL,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/themoviedbService.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ReviewContainer = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n\r\n  li {\r\n    box-shadow: 2px 6px 6px var(--color-text);\r\n    border: 1px solid var(--color-text);\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport { getMovieReviews } from 'services/themoviedbService';\r\n\r\nimport { ReviewContainer } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async id => {\r\n      try {\r\n        const response = await getMovieReviews(id);\r\n        setReviews(response.results);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData(movieId);\r\n  }, [movieId]);\r\n  return (\r\n    <ReviewContainer>\r\n      {!reviews.length\r\n        ? \"We don't have any reviews for this movie.\"\r\n        : reviews.map(({ author, content, created_at, id }) => (\r\n            <li key={id}>\r\n              <h4>Author: {author}</h4>\r\n              <p>{content}</p>\r\n              <h5>{Moment(created_at, 'YYYYMMDD').fromNow()}</h5>\r\n            </li>\r\n          ))}\r\n    </ReviewContainer>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import Axios from 'axios';\r\n\r\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst API_KEY = '2b316c342fe13f9049052886494c29f1';\r\nconst URL = 'https://api.themoviedb.org/';\r\n\r\nconst getTrendingMovies = async () => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/trending/movie/day?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieById = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieCast = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst getMovieReviews = async movie_id => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`\r\n  );\r\n  return data;\r\n};\r\n\r\nconst searchMovie = async query => {\r\n  const { data } = await Axios.get(\r\n    `${URL}3/search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n  return data;\r\n};\r\n\r\nexport {\r\n  getTrendingMovies,\r\n  getMovieById,\r\n  getMovieCast,\r\n  getMovieReviews,\r\n  searchMovie,\r\n};\r\n"],"names":["ReviewContainer","styled","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","id","getMovieReviews","response","results","console","log","length","map","author","content","created_at","Moment","fromNow","API_KEY","URL","getTrendingMovies","Axios","data","getMovieById","movie_id","getMovieCast","searchMovie","query"],"sourceRoot":""}